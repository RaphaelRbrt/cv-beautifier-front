name: CV Beautifier Frontend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  WORKING_DIR: cv-beautifier-front

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Type check
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run type-check

      - name: Lint
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run lint

      - name: Format check
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run format:check

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Build
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run build
        env:
          NODE_ENV: production

  deploy:
    name: Docker Build & Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/cv-beautifier-front:latest
          docker build -t $IMAGE_NAME ./
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Deploy to Kubernetes
        env:
          WEBHOOK_TOKEN: ${{ secrets.CVBEAUTIFIER_WEBHOOK_TOKEN }}
          VPS_SERVER: ${{ secrets.CVBEAUTIFIER_VPS_SERVER }}
        run: |
          curl -sS ${VPS_SERVER}/healthz
          curl -sS -X POST ${VPS_SERVER}/deploy \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${WEBHOOK_TOKEN}" \
            -d "{\"deployment\":\"cv-beautifier-front-deployment\",\"namespace\":\"default\",\"container\":\"cv-beautifier-front\",\"image\":\"${IMAGE_NAME}\"}"
